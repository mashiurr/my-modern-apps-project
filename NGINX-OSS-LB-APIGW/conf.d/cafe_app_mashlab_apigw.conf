##
# Café App API Gateway (NGINX OSS)
##


# ----------------------------
# Upstreams: Kubernetes NodePorts
# Define upstreams (can add multiple backend nodes for load balancing)
# ----------------------------

#upstream coffee_backend {
    #server 10.1.1.4:31443;  # Replace with Kubernetes NodePort / LB IPs
    #server 10.1.1.5:31443; # Add more nodes if available
    #server cafe.mashlab.com:31443;
#}

#upstream tea_backend {
    #server 10.1.1.4:31443;  # Replace with Kubernetes NodePort / LB IPs
    #server 10.1.1.5:31443; # Add more nodes if available
    #server cafe.mashlab.com:31443;
#}


# ----------------------------
# Shared memory zones for rate limiting
# ----------------------------
# Coffee API: 10 requests/sec per client
limit_req_zone $binary_remote_addr zone=coffee_limit:10m rate=10r/s;

# Tea API: 5 requests/sec per client
limit_req_zone $binary_remote_addr zone=tea_limit:10m rate=5r/s;

# ----------------------------
# Map valid API Keys
# ----------------------------
map $http_x_api_key $api_key_valid {
    default         0;
    "COFFEE-12345"  1;   # Example key for Coffee API
    "TEA-67890"     1;   # Example key for Tea API
}


# ----------------------------
# HTTP → HTTPS redirect
# ----------------------------

server {
    listen 80;
    server_name apigw.mashlab.com;

    return 301 https://$host$request_uri;
}

# ----------------------------
# API Gateway server block
# ----------------------------
server {
    listen 443 ssl;
    server_name apigw.mashlab.com;

    ssl_certificate     /etc/nginx/ssl/cafeapp-mashlab.com-cert.crt;
    ssl_certificate_key /etc/nginx/ssl/cafeapp-mashlab.com-tls.key;

    # ------------------------
    # Coffee API Routing
    # ------------------------
    location /coffee/ {

        # API Key validation
        if ($api_key_valid = 0) {
            return 401 "Unauthorized - Invalid API Key\n";
        }

        # Rate limiting
        limit_req zone=coffee_limit burst=5 nodelay;

        #proxy_pass https://coffee_backend/coffee/;
	proxy_pass https://cafe.mashlab.com:31443/coffee/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_ssl_server_name on;
        proxy_ssl_verify off;   # Keep only if backend cert is self-signed

        #access_log /var/log/nginx/apigw_coffee_access.log main;
		access_log /var/log/nginx/apigw_coffee_access.log main_apigw;
        error_log  /var/log/nginx/apigw_coffee_error.log warn;
    }

    # ------------------------
    # Tea API Routing
    # ------------------------
    location /tea/ {
        # API Key validation
        if ($api_key_valid = 0) {
            return 401 "Unauthorized - Invalid API Key\n";
        }

        # Rate limiting
        limit_req zone=tea_limit burst=3 nodelay;

        #proxy_pass https://tea_backend/tea/;
	proxy_pass https://cafe.mashlab.com:31443/tea/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_ssl_server_name on;
        proxy_ssl_verify off;

        #access_log /var/log/nginx/apigw_tea_access.log main;
		access_log /var/log/nginx/apigw_tea_access.log main_apigw;
        error_log  /var/log/nginx/apigw_tea_error.log warn;
    }

    # Optional health endpoint
    location /healthz {
        access_log off;
        return 200 "API Gateway OK\n";
    }

    # Optional rate limiting (example: 10 req/sec per IP)
    # limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
    # limit_req zone=one burst=5;

}
